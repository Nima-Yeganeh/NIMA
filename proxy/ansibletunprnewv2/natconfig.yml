---
- name: Update and Configure Ubuntu Servers
  hosts: local_servers
  become: yes

  tasks:
    - name: NAT Update on Host - Configure IPTables Rules - Copy zallnatconfig.sh to Host
      copy:
        src: zallnatconfig.sh
        dest: /zallnatconfig.sh
        mode: '0755'
      when: inventory_hostname in groups['local_servers']

    - name: NAT Update on Host - Configure IPTables Rules - Execute zallnatconfig.sh Script
      command: sudo bash /zallnatconfig.sh
      when: inventory_hostname in groups['local_servers']

    - name: Copy znatconfigall to IR Host
      copy:
        src: "{{ inventory_hostname }}.zallnatconfig.sh"
        dest: "/{{ inventory_hostname }}.zallnatconfig.sh"
        mode: '0755'
      when: inventory_hostname in groups['local_servers']

    - name: NAT Update on Host
      command: "sudo bash /{{ inventory_hostname }}.zallnatconfig.sh > /dev/null 2>&1"
      when: inventory_hostname in groups['local_servers']
      ignore_errors: yes

    - name: Execute fwsave.sh Script
      command: sudo bash /fwsave.sh
      when: inventory_hostname in groups['local_servers']

    - name: Copy ServerIP to IR Host
      copy:
        src: "{{ inventory_hostname }}.serverip.txt"
        dest: "/serverip.txt"
      when: inventory_hostname in groups['local_servers']

    - name: Copy update_user_nat_config.sh to Host
      copy:
        src: update_user_nat_config_v2.sh
        dest: /update_user_nat_config.sh
        mode: '0755'
      when: inventory_hostname in groups['local_servers']

    - name: Copy myuserupdatescript.service to Host
      copy:
        src: myuserupdatescript.service
        dest: /etc/systemd/system/myuserupdatescript.service
      when: inventory_hostname in groups['local_servers']

    - name: Reload Systemd
      systemd:
        daemon_reload: yes
      when: inventory_hostname in groups['local_servers']

    - name: Enable myuserupdatescript.service
      systemd:
        name: myuserupdatescript.service
        enabled: yes
      when: inventory_hostname in groups['local_servers']

    - name: Stop myuserupdatescript.service
      service:
        name: myuserupdatescript.service
        state: stopped
      when: inventory_hostname in groups['local_servers']
      
    - name: Start myuserupdatescript.service
      service:
        name: myuserupdatescript.service
        state: started
      when: inventory_hostname in groups['local_servers']

